p = 9631668579539701602760432524602953084395033948174466686285759025897298205383
x,y = GF(p)['x,y'].gens()
P.<x,y> = GF(p)[]
f = x^3 + 9605275265879631008726467740646537125692167794341640822702313056611938432994*x + 7839838607707494463758049830515369383778931948114955676985180993569200375480
C = Curve(-y^2 + f)
singular_point = C.singular_points()[0]
# find singular point

f_ = f.subs(x=x+singular_point[0])

G = (5664314881801362353989790109530444623032842167510027140490832957430741393367, 3735011281298930501441332016708219762942193860515094934964869027614672869355)
A = (3829488417236560785272607696709023677752676859512573328792921651640651429215, 7947434117984861166834877190207950006170738405923358235762824894524937052000)
B = (9587224500151531060103223864145463144550060225196219072827570145340119297428, 2527809441042103520997737454058469252175392602635610992457770946515371529908)

G_t = (GF(p)(G[0]-singular_point[0]), GF(p)(G[1]))
A_t = (GF(p)(A[0]-singular_point[0]), GF(p)(A[1]))
B_t = (GF(p)(B[0]-singular_point[0]), GF(p)(B[1]))

print(f_.factor())
# (x + 2559728733519623462165709156994202738915871345165545624745656061903971797242) * x^2

t = GF(p)(2559728733519623462165709156994202738915871345165545624745656061903971797242).square_root()
print(t)
u = (G_t[1] + t*G_t[0])/(G_t[1] - t*G_t[0]) % p
v = (A_t[1] + t*A_t[0])/(A_t[1] - t*A_t[0]) % p

print(discrete_log(v, u))
# dA = 1532487521612462894579517163606359285989568203515734083099567402780433190052